<?xml version="1.0" encoding="utf-8"?>
<topic id="4c7e4d84-6177-4cde-8bbb-3ffe37bcb84c" revisionNumber="1">
  <developerConceptualDocument
     xmlns       ="http://ddue.schemas.microsoft.com/authoring/2003/5"
     xmlns:xlink ="http://www.w3.org/1999/xlink">
    <!--
        <summary>
          <para>Optional summary abstract</para>
        </summary>
        -->
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      <para>
      </para>
    </introduction>
    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <title>CondSubstringBackrefFlag</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
             <autoOutline /> -->
        <alert class="note">
          This directive has been superceded by the
          <link xlink:href="e49a6636-15bd-470a-98b3-e50532c684db">
            FlagCharacters</link> directive.
        </alert>

        <para>
          You can include <phrase>back-referencess</phrase> to captured groups in the
          preceding RewriteCond, in your replacement strings. (For an explanation of
          back-references, see
          <link xlink:href="39dbb30e-2afd-4cb1-aaff-45497fe2cbe6">the
            RewriteCond directive</link>.)
        </para>

        <para>
          Apache&apos;s mod_rewrite uses the % character to denote
          numbered back-references to groups in the RewriteCond.  But
          back-references of the form %n can be confused with characters
          you would like to include in the pattern.
        </para>


        <para>
          For example, a replacement pattern might look like <code lang="ini">
            /results?query=http%3A%2F%2Fserver%2Fpage.asp%3Farg=%2
          </code>
          The %3A%2F%2F is really meant to be :// - it is url escaped.
          But the %3 sure looks like a back-reference to a matched
          substring from the most recently
          matched <codeInline>RewriteCond</codeInline> statement. It&apos;s
          ambiguous.  When there is no third substring, IIRF just passes
          the %3 through, so the %3A works as desired, representing the
          colon character in the output.  But if there is a third
          substring, then it will be injected at that point, and you
          won&apos;t get what you want.
        </para>

        <para>
          This example shows the case where the URL-escaped
          characters are placed directly into the replacement
          pattern. But the same problem can happen when URLs generated by the
          application include these encoded characters.
        </para>

        <para>
          This directive allows you to use a different flag character for
          back-references, to disambiguate between URL-escaped characters and
          numbered back-references.
        </para>

        <para>
          The directive takes a single argument, a character.  It must be one of
          the following: % @ * _ ^ ! ~ .
        </para>

        <para>
          You should set this at most once in the ini file, or any
          included ini files. If there is more than one occurrence,
          you&apos;ll get a warning.  If the
          directive is not present, then IIRF uses * (asterisk).
        </para>

        <para>Example:  <markup>
            <br/>
          </markup>
          when using this directive:
          <code lang="ini">
            CondSubstringBackrefFlag ~
          </code>
          ...then a replacement string like the following will append the 2nd matched
          substring from the most recently evaluated RewriteCond, at the end of
          the URL, and all the sequences like %3F will be treated as
          URL-escaped, as intended: <code lang="ini">

            /results?query=http%3A%2F%2Fserver%2Fpage.asp%3Farg=~2
          </code>
        </para>

        <para>Be careful using % as the back-reference character. It&apos;s
          supported only for compatibility with mod_rewrite, but it
          can lead to confusion.
        </para>

      </content>
    </section>

    <relatedTopics>
      <!-- FlagCharacters -->
      <link xlink:href="e49a6636-15bd-470a-98b3-e50532c684db"/>
    </relatedTopics>

  </developerConceptualDocument>
</topic>


